# Script de d√©marrage complet de l'√©cosyst√®me Yukpo
# Usage: .\start_yukpo_ecosystem.ps1

Write-Host "üöÄ D√©marrage de l'√©cosyst√®me Yukpo complet..." -ForegroundColor Cyan
Write-Host ""

# √âtape 1: D√©marrer le microservice d'embedding
Write-Host "üì¶ √âtape 1: D√©marrage du microservice d'embedding..." -ForegroundColor Yellow

if (Test-Path "microservice_embedding") {
    Set-Location "microservice_embedding"
    
    # V√©rifier si le microservice est d√©j√† en cours d'ex√©cution
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:8000/health" -Method GET -TimeoutSec 2
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Microservice d'embedding d√©j√† en cours d'ex√©cution" -ForegroundColor Green
        }
    } catch {
        Write-Host "üîÑ D√©marrage du microservice d'embedding..." -ForegroundColor Yellow
        
        # D√©marrer le microservice en arri√®re-plan
        Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd '$PWD'; .\start_embedding_service.ps1" -WindowStyle Normal
        
        # Attendre que le service soit pr√™t
        Write-Host "‚è≥ Attente du d√©marrage du microservice d'embedding..." -ForegroundColor Yellow
        $maxAttempts = 30
        $attempt = 0
        
        while ($attempt -lt $maxAttempts) {
            try {
                $response = Invoke-WebRequest -Uri "http://localhost:8000/health" -Method GET -TimeoutSec 2
                if ($response.StatusCode -eq 200) {
                    Write-Host "‚úÖ Microservice d'embedding pr√™t" -ForegroundColor Green
                    break
                }
            } catch {
                $attempt++
                Start-Sleep -Seconds 1
                Write-Host "‚è≥ Tentative $attempt/$maxAttempts..." -ForegroundColor Gray
            }
        }
        
        if ($attempt -eq $maxAttempts) {
            Write-Host "‚ùå Timeout: Le microservice d'embedding n'a pas d√©marr√©" -ForegroundColor Red
            exit 1
        }
    }
    
    Set-Location ".."
} else {
    Write-Host "‚ùå Dossier microservice_embedding non trouv√©" -ForegroundColor Red
    exit 1
}

Write-Host ""

# √âtape 2: D√©marrer le backend Rust
Write-Host "üîß √âtape 2: D√©marrage du backend Rust..." -ForegroundColor Yellow

if (Test-Path "backend") {
    Set-Location "backend"
    
    # V√©rifier si le backend est d√©j√† en cours d'ex√©cution
    try {
        $response = Invoke-WebRequest -Uri "http://localhost:3001/health" -Method GET -TimeoutSec 2
        if ($response.StatusCode -eq 200) {
            Write-Host "‚úÖ Backend Rust d√©j√† en cours d'ex√©cution" -ForegroundColor Green
        }
    } catch {
        Write-Host "üîÑ D√©marrage du backend Rust..." -ForegroundColor Yellow
        
        # D√©marrer le backend avec la configuration d'embedding
        .\start_with_embedding.ps1
    }
    
    Set-Location ".."
} else {
    Write-Host "‚ùå Dossier backend non trouv√©" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üéâ √âcosyst√®me Yukpo d√©marr√© avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Services disponibles:" -ForegroundColor Cyan
Write-Host "   - Microservice d'embedding: http://localhost:8000" -ForegroundColor White
Write-Host "   - Documentation embedding: http://localhost:8000/docs" -ForegroundColor White
Write-Host "   - Backend Rust: http://localhost:3001" -ForegroundColor White
Write-Host "   - API Backend: http://localhost:3001/api" -ForegroundColor White
Write-Host ""
Write-Host "üîç Fonctionnalit√©s activ√©es:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Vectorisation automatique des services" -ForegroundColor Green
Write-Host "   ‚úÖ Sauvegarde dans Pinecone" -ForegroundColor Green
Write-Host "   ‚úÖ Recherche s√©mantique" -ForegroundColor Green
Write-Host "   ‚úÖ Matching intelligent" -ForegroundColor Green
Write-Host ""
Write-Host "üí° Pour tester:" -ForegroundColor Yellow
Write-Host "   1. Cr√©ez un service via l'interface" -ForegroundColor Gray
Write-Host "   2. V√©rifiez les logs pour les embeddings" -ForegroundColor Gray
Write-Host "   3. Testez la recherche s√©mantique" -ForegroundColor Gray 