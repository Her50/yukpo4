# Script de configuration des variables d'environnement pour les tests de transcription audio
Write-Host "üé§ Configuration des variables d'environnement pour la transcription audio" -ForegroundColor Green
Write-Host "=====================================================================" -ForegroundColor Green

# V√©rifier si la cl√© OpenAI est d√©j√† configur√©e
$current_openai_key = $env:OPENAI_API_KEY

if (-not $current_openai_key) {
    Write-Host "‚ö†Ô∏è  Cl√© OpenAI non configur√©e" -ForegroundColor Yellow
    Write-Host "`nüìù Pour configurer votre cl√© OpenAI :" -ForegroundColor Cyan
    Write-Host "1. Allez sur https://platform.openai.com/api-keys" -ForegroundColor White
    Write-Host "2. Cr√©ez une nouvelle cl√© API" -ForegroundColor White
    Write-Host "3. Copiez la cl√© (commence par 'sk-')" -ForegroundColor White
    Write-Host "4. Ex√©cutez cette commande :" -ForegroundColor White
    Write-Host "   `$env:OPENAI_API_KEY='sk-votre-cle-ici'" -ForegroundColor Yellow
    Write-Host "`nüí° Ou ajoutez-la temporairement pour ce test :" -ForegroundColor Cyan
    
    # Demander √† l'utilisateur d'entrer sa cl√©
    $openai_key = Read-Host "Entrez votre cl√© OpenAI (ou appuyez sur Entr√©e pour ignorer)"
    
    if ($openai_key -and $openai_key -ne "") {
        $env:OPENAI_API_KEY = $openai_key
        Write-Host "‚úÖ Cl√© OpenAI configur√©e temporairement" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Test sans cl√© OpenAI (utilisera Hugging Face en fallback)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚úÖ Cl√© OpenAI d√©j√† configur√©e" -ForegroundColor Green
}

# Configurer les autres variables n√©cessaires
Write-Host "`nüîß Configuration des autres variables..." -ForegroundColor Cyan

# Variables de base de donn√©es
$env:DATABASE_URL = "postgresql://postgres:Hernandez87@localhost/yukpomnang"
$env:MONGODB_URL = "mongodb://localhost:27017"
$env:REDIS_URL = "redis://127.0.0.1/"
$env:PORT = "3001"
$env:ENABLE_AI_OPTIMIZATIONS = "true"

# Variables API
$env:YUKPO_API_KEY = "yukpo_backend_key_2024"
$env:EMBEDDING_API_KEY = "yukpo_embedding_key_2024"

# Variables Pinecone (si disponibles)
if (-not $env:PINECONE_API_KEY) {
    $env:PINECONE_API_KEY = "your-pinecone-api-key-here"
    Write-Host "‚ö†Ô∏è  Cl√© Pinecone non configur√©e (utilisera la valeur par d√©faut)" -ForegroundColor Yellow
}

$env:PINECONE_INDEX = "service-embeddings"
$env:PINECONE_ENV = "us-east-1-aws"

# Variables de s√©curit√©
$env:JWT_SECRET = "your_jwt_secret_here"
$env:ENCRYPTION_KEY = "your_encryption_key_here"

Write-Host "‚úÖ Variables d'environnement configur√©es" -ForegroundColor Green

# V√©rifier la configuration
Write-Host "`nüìã Configuration actuelle :" -ForegroundColor Cyan
Write-Host "DATABASE_URL: $env:DATABASE_URL" -ForegroundColor White
Write-Host "PORT: $env:PORT" -ForegroundColor White
Write-Host "OPENAI_API_KEY: $($env:OPENAI_API_KEY.Substring(0, [Math]::Min(10, $env:OPENAI_API_KEY.Length)))..." -ForegroundColor White
Write-Host "PINECONE_INDEX: $env:PINECONE_INDEX" -ForegroundColor White

Write-Host "`nüöÄ Pr√™t pour les tests de transcription audio !" -ForegroundColor Green
Write-Host "Ex√©cutez maintenant : .\test_audio_transcription.ps1" -ForegroundColor Yellow 