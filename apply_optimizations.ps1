# Script d'application des optimisations de recherche
# Date: 2025-08-28

Write-Host "üöÄ Application des optimisations de recherche Yukpo" -ForegroundColor Cyan
Write-Host "==================================================" -ForegroundColor Cyan

# 1. Arr√™ter les services existants
Write-Host "`n1Ô∏è‚É£ Arr√™t des services existants..." -ForegroundColor Yellow
Stop-Process -Name "python" -Force -ErrorAction SilentlyContinue
Stop-Process -Name "yukpomnang_backend" -Force -ErrorAction SilentlyContinue

# 2. Appliquer les migrations de base de donn√©es
Write-Host "`n2Ô∏è‚É£ Application des migrations de base de donn√©es..." -ForegroundColor Yellow
cd backend
sqlx migrate run
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de l'application des migrations" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Migrations appliqu√©es avec succ√®s" -ForegroundColor Green

# 3. Compiler le backend avec les optimisations
Write-Host "`n3Ô∏è‚É£ Compilation du backend optimis√©..." -ForegroundColor Yellow
cargo build --release
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur de compilation" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Backend compil√© avec succ√®s" -ForegroundColor Green

# 4. D√©marrer le microservice
Write-Host "`n4Ô∏è‚É£ D√©marrage du microservice..." -ForegroundColor Yellow
cd ../microservice_embedding
Start-Process -FilePath "python" -ArgumentList "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000" -WindowStyle Hidden
Start-Sleep -Seconds 5

# V√©rifier que le microservice fonctionne
$microservice_health = Invoke-RestMethod -Uri "http://localhost:8000/health" -Method Get -ErrorAction SilentlyContinue
if ($microservice_health.status -eq "healthy") {
    Write-Host "‚úÖ Microservice d√©marr√© et fonctionnel" -ForegroundColor Green
} else {
    Write-Host "‚ùå Microservice non accessible" -ForegroundColor Red
    exit 1
}

# 5. D√©marrer le backend optimis√©
Write-Host "`n5Ô∏è‚É£ D√©marrage du backend optimis√©..." -ForegroundColor Yellow
cd ../backend
Start-Process -FilePath "cargo" -ArgumentList "run", "--release" -WindowStyle Hidden
Start-Sleep -Seconds 10

# V√©rifier que le backend fonctionne
try {
    $backend_response = Invoke-RestMethod -Uri "http://localhost:3001/health" -Method Get -Headers @{"Authorization"="Bearer test"} -ErrorAction Stop
    Write-Host "‚úÖ Backend d√©marr√© et fonctionnel" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Backend d√©marr√© (autorisation requise)" -ForegroundColor Yellow
}

# 6. D√©marrer le frontend
Write-Host "`n6Ô∏è‚É£ D√©marrage du frontend..." -ForegroundColor Yellow
cd ../frontend
Start-Process -FilePath "npm" -ArgumentList "run", "dev" -WindowStyle Hidden
Start-Sleep -Seconds 5

# V√©rifier que le frontend fonctionne
$frontend_response = Invoke-RestMethod -Uri "http://localhost:5173" -Method Get -ErrorAction SilentlyContinue
if ($frontend_response) {
    Write-Host "‚úÖ Frontend d√©marr√© et fonctionnel" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Frontend en cours de d√©marrage" -ForegroundColor Yellow
}

# 7. Test de performance
Write-Host "`n7Ô∏è‚É£ Test de performance..." -ForegroundColor Yellow
Write-Host "`nüß™ Test de recherche optimis√©e:" -ForegroundColor Cyan
Write-Host "URL: http://localhost:5173" -ForegroundColor White
Write-Host "Testez avec: 'je cherche un salon de coiffure'" -ForegroundColor White

# 8. R√©sum√© des optimisations
Write-Host "`nüìä R√©sum√© des optimisations appliqu√©es:" -ForegroundColor Cyan
Write-Host "‚úÖ Recherche directe sans transformation IA" -ForegroundColor Green
Write-Host "‚úÖ Score de matching √©lev√© (80% minimum)" -ForegroundColor Green
Write-Host "‚úÖ Scoring d'interaction (popularit√©, notes, fra√Æcheur)" -ForegroundColor Green
Write-Host "‚úÖ Fallback SQL optimis√©" -ForegroundColor Green
Write-Host "‚úÖ Index de base de donn√©es pour les performances" -ForegroundColor Green

Write-Host "`nüéØ Am√©liorations attendues:" -ForegroundColor Cyan
Write-Host "‚Ä¢ Temps de recherche: 17s ‚Üí ~2s (85% plus rapide)" -ForegroundColor Green
Write-Host "‚Ä¢ Qualit√© des r√©sultats: Score 80% minimum" -ForegroundColor Green
Write-Host "‚Ä¢ Pertinence: Prise en compte de la popularit√©" -ForegroundColor Green

Write-Host "`nüöÄ Optimisations appliqu√©es avec succ√®s !" -ForegroundColor Green
Write-Host "Testez maintenant sur http://localhost:5173" -ForegroundColor Cyan 