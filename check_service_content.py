#!/usr/bin/env python3
"""
Script pour v√©rifier le contenu des services vectoris√©s
"""

import os
import psycopg2
from dotenv import load_dotenv

# Charger les variables d'environnement depuis le backend
load_dotenv('backend/.env')

def check_service_content():
    """V√©rifie le contenu des services vectoris√©s"""
    db_url = os.getenv('DATABASE_URL')
    if not db_url:
        print("‚ùå DATABASE_URL non configur√©e")
        return
    
    try:
        conn = psycopg2.connect(db_url)
        cursor = conn.cursor()
        
        # V√©rifier quelques services vectoris√©s avec succ√®s
        cursor.execute("""
            SELECT id, data, embedding_status, embedding_data
            FROM services 
            WHERE is_active = true AND embedding_status = 'success'
            ORDER BY id
            LIMIT 5
        """)
        
        services = cursor.fetchall()
        print("üîç Contenu des services vectoris√©s:")
        for service_id, data, status, embedding_data in services:
            print(f"\nService {service_id} (status: {status}):")
            if data:
                if isinstance(data, dict):
                    print(f"  - Titre: {data.get('titre_service', 'N/A')}")
                    print(f"  - Description: {data.get('description_service', 'N/A')}")
                    print(f"  - Cat√©gorie: {data.get('category', 'N/A')}")
                    print(f"  - Comp√©tences: {data.get('competences', 'N/A')}")
                else:
                    print(f"  - Data: {str(data)[:200]}...")
            else:
                print(f"  - Aucune donn√©e")
            
            if embedding_data:
                print(f"  - Embedding data: {str(embedding_data)[:100]}...")
        
        cursor.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå Erreur v√©rification: {e}")

def main():
    """Fonction principale"""
    print("üîç V√©rification du contenu des services")
    print("=" * 50)
    
    check_service_content()

if __name__ == "__main__":
    main() 